This program inserts lexicographically increasing Strings into Maps as <String, Integer> pairs.

Enter # strings to insert into the maps: 20000
class bstmap.ULLMap: 2.83 sec
class bstmap.BSTMap: 6.07 sec
Java's Built-in TreeMap: 0.02 sec
Java's Built-in HashMap: 0.01 sec
Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into the maps: 30000
class bstmap.ULLMap: 8.70 sec
class bstmap.BSTMap: 8.05 sec
Java's Built-in TreeMap: 0.02 sec
Java's Built-in HashMap: 0.01 sec
Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into the maps: 100000
--Stack Overflow -- couldn't add 100000 strings.
--Stack Overflow -- couldn't add 100000 strings.
Java's Built-in TreeMap: 0.05 sec
Java's Built-in HashMap: 0.03 sec
Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into the maps: 10000000000000000
Please enter a positive integer: 1000000
--Stack Overflow -- couldn't add 1000000 strings.
--Stack Overflow -- couldn't add 1000000 strings.
Java's Built-in TreeMap: 0.58 sec
Java's Built-in HashMap: 0.20 sec
--------------------------------------------------------------------
This program inserts random Strings of length L into different types of maps as <String, Integer> pairs.
Please enter desired length of each string: 100

Enter # strings to insert into the maps: 1000
class bstmap.ULLMap: 0.01 sec
class bstmap.BSTMap: 0.01 sec
Java's Built-in TreeMap: 0.01 sec
Java's Built-in HashMap: 0.00 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 10000
class bstmap.ULLMap: 0.51 sec
class bstmap.BSTMap: 0.03 sec
Java's Built-in TreeMap: 0.03 sec
Java's Built-in HashMap: 0.01 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 100000
--Stack Overflow -- couldn't add 100000 strings of length 100.
class bstmap.BSTMap: 0.12 sec
Java's Built-in TreeMap: 0.12 sec
Java's Built-in HashMap: 0.15 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 500000
--Stack Overflow -- couldn't add 500000 strings of length 100.
class bstmap.BSTMap: 1.45 sec
Java's Built-in TreeMap: 1.15 sec
Java's Built-in HashMap: 0.84 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 1000000
--Stack Overflow -- couldn't add 1000000 strings of length 100.
class bstmap.BSTMap: 4.40 sec
Java's Built-in TreeMap: 3.13 sec
Java's Built-in HashMap: 1.54 sec
Would you like to try more timed-tests? (y/n)n